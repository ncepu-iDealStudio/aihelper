{"version":3,"file":"index-6d5b111e.js","sources":["../../src/views/conversation/components/StatusCard.vue","../../src/views/conversation/index.vue"],"sourcesContent":["\r\n<template>\r\n  <n-space vertical>\r\n    <n-cascader v-model:value=\"value\" placeholder=\"prompt\" :expand-trigger=\"hoverTrigger ? 'hover' : 'click'\"\r\n      :options=\"options\" :check-strategy=\"checkStrategyIsChild ? 'child' : 'all'\" :show-path=\"showPath\" clearable=\"true\"\r\n      :filterable=\"filterable\" @update:value=\"handleUpdateValue\" />\r\n  </n-space>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref } from 'vue'\r\nimport { CascaderOption } from 'naive-ui'\r\nimport { getPromptListAPI } from \"@/api/prompt\"\r\n\r\nconst checkStrategyIsChild = ref(true)\r\nconst showPath = ref(false)\r\nconst hoverTrigger = ref(false)\r\nconst filterable = ref(true)\r\nconst value = ref('prompt')\r\n\r\nfunction getOptions(depth = 2, iterator = 1, parent_id = '') {\r\n\r\n  const options: CascaderOption[] = []\r\n\r\n  if (iterator === 1) {\r\n    for (let i = 0; i < data.value.data.parent_result.length; i++) {\r\n      options.push({\r\n        value: data.value.data.parent_result[i].prompt_id,\r\n        label: data.value.data.parent_result[i].category,\r\n        children: getOptions(depth, 2, data.value.data.parent_result[i].prompt_id)\r\n      })\r\n    }\r\n\r\n  } else if (iterator === depth) {\r\n    for (let i = 0; i < data.value.data.son_result.length; i++) {\r\n      if (data.value.data.son_result[i].prompt_parent_id === parent_id) {\r\n        options.push({\r\n          value: data.value.data.son_result[i].prompt,\r\n          label: data.value.data.son_result[i].title,\r\n        })\r\n      }\r\n    }\r\n  } \r\n  return options\r\n}\r\n\r\nconst data = ref()\r\nconst options = ref()\r\n\r\nconst setPrompts: any = async ()=>{\r\n  data.value = await getPromptListAPI()\r\n  console.log(data.value.data,data.value.data.parent_result.length)\r\n  options.value = getOptions()\r\n}\r\nsetPrompts()\r\n\r\n// 传递 选中的 prompt 给父组件\r\nconst emitPromt = defineEmits([\"chosePrompt\"])\r\nconst givePrompt = (value: any) => {\r\n  emitPromt(\"chosePrompt\", value)\r\n}\r\nconst handleUpdateValue = (value: string, option: CascaderOption) => {\r\n  givePrompt(value)\r\n}\r\n</script>","<template>\r\n  <div class=\"flex-grow mb-4\" ref=\"rootRef\">\r\n    <!-- 类似聊天室，左边栏是对话列表，右边栏是聊天窗口，使用naive-ui -->\r\n    <div class=\"h-full flex flex-col md:flex-row md:space-x-4\">\r\n      <!-- 左栏 -->\r\n      <div class=\"md:w-1/4 md:min-w-1/4 w-full flex flex-col space-y-4 md:h-full\">\r\n        <StatusCard @chose-prompt=\"show\" />\r\n        <n-card class=\"h-full flex-col left-col\" content-style=\"padding: 4px;\">\r\n          <div class=\"flex box-content m-2\" v-if=\"!newConversation\">\r\n            <n-button secondary strong type=\"primary\" class=\"flex-1\" @click=\"makeNewConversation\" :disabled=\"loadingBar\">\r\n              <template #icon>\r\n                <n-icon class>\r\n                  <Add />\r\n                </n-icon>\r\n              </template>\r\n              {{ $t(\"commons.newConversation\") }}\r\n            </n-button>\r\n          </div>\r\n          <n-scrollbar class=\"max-h-30 md:max-h-max md:min-h-0 md:flex-grow md:overflow-y-auto\">\r\n            <n-menu :content-style=\"{ backgroundColor: 'red' }\" ref=\"menuRef\" :disabled=\"loadingBar\"\r\n              :options=\"menuOptions\" :root-indent=\"18\" v-model:value=\"currentConversationId\"></n-menu>\r\n          </n-scrollbar>\r\n        </n-card>\r\n      </div>\r\n      <!-- 右栏 -->\r\n      <n-card class=\"md:w-3/4 h-full\" :bordered=\"true\" content-style=\"padding: 0; display: flex; flex-direction: column;\">\r\n        <!-- 上半部分 -->\r\n        <n-scrollbar class=\"h-140 sm:h-0 flex-grow\" ref=\"historyRef\" :content-style=\"{ height: '100%' }\"\r\n          v-if=\"currentConversationId\">\r\n          <!-- 消息记录内容（用于全屏展示） -->\r\n          <!-- <n-button\r\n            secondary\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            @click=\"exportToMarkdownFile\"\r\n            style=\"float:right;margin:10px 10px 0px 0px\"\r\n          >\r\n            <template #icon>\r\n              <n-icon>\r\n                <LogoMarkdown />\r\n              </n-icon>\r\n            </template>\r\n          </n-button>-->\r\n          <HistoryContent ref=\"historyContentRef\" :messages=\"currentMessageListDisplay\" :fullscreen=\"false\"\r\n            :model-name=\"currentConversation.model_name\" :show-tips=\"showFullscreenTips\" :loading=\"loadingHistory\" />\r\n        </n-scrollbar>\r\n        <!-- 未选中对话 -->\r\n        <div class=\"flex-grow flex flex-col justify-center\" :style=\"{ backgroundColor: themeVars.cardColor }\"\r\n          v-else-if=\"!currentConversationId\">\r\n          <n-empty v-if=\"!currentConversation\" :description=\"$t('tips.loadConversation')\">\r\n            <template #icon>\r\n              <n-icon>\r\n                <ChatboxEllipses />\r\n              </n-icon>\r\n            </template>\r\n            <template #extra>\r\n              <n-button @click=\"makeNewConversation\">{{ $t(\"tips.newConversation\") }}</n-button>\r\n            </template>\r\n          </n-empty>\r\n        </div>\r\n        <!-- 下半部分 -->\r\n        <div class=\"flex flex-col relative\" :style=\"{ height: inputHeight }\">\r\n          <n-divider />\r\n          <div class=\"right-4 -top-12 lg:-right-10 lg:-top-8 ml-1 absolute\">\r\n            <!-- 回到底部按钮 -->\r\n            <n-button @click=\"scrollToBottomSmooth\" secondary circle size=\"small\">\r\n              <template #icon>\r\n                <ArrowDown />\r\n              </template>\r\n            </n-button>\r\n          </div>\r\n          <!-- 工具栏 -->\r\n          <div class=\"flex flex-row space-x-2 py-2 justify-center relative\" style=\"height:25px\">\r\n            <!-- 展开/收起按钮 -->\r\n            <n-button @click=\"toggleInputExpanded\" quaternary circle size=\"small\" class=\"absolute left-1\">\r\n              <template #icon>\r\n                <n-icon :component=\"inputExpanded ? KeyboardDoubleArrowDownRound : KeyboardDoubleArrowUpRound\"></n-icon>\r\n              </template>\r\n            </n-button>\r\n            <!-- 是否启用自动滚动 -->\r\n            <n-tooltip>\r\n              <template #trigger>\r\n                <n-switch v-model:value=\"autoScrolling\" size=\"small\" class=\"absolute left-8 top-3\">\r\n                  <template #icon>A</template>\r\n                </n-switch>\r\n              </template>\r\n              {{ $t(\"tips.autoScrolling\") }}\r\n            </n-tooltip>\r\n            <n-button :disabled=\"sendDisabled\" @click=\"sendMsg\" class=\"absolute right-1\" type=\"primary\" size=\"small\">\r\n              {{ $t(\"commons.send\") }}\r\n              <template #icon>\r\n                <n-icon>\r\n                  <Send />\r\n                </n-icon>\r\n              </template>\r\n            </n-button>\r\n          </div>\r\n          <!-- 输入框 -->\r\n          <n-input v-model:value=\"inputValue\" class=\"flex-1\" type=\"textarea\" :bordered=\"false\"\r\n            :placeholder=\"$t('tips.sendMessage')\" @keydown.shift.enter=\"shortcutSendMsg\" />\r\n          <div class=\"m-2 flex flex-row justify-between\">\r\n            <n-text depth=\"3\" class=\"hidden sm:block\">{{ currentAvaliableAskCountsTip }}</n-text>\r\n          </div>\r\n        </div>\r\n      </n-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useConversationStore, useUserStore } from \"@/store\";\r\nimport { ConversationSchema } from \"@/types/schema\";\r\nimport { computed, h, onMounted, ref, watch } from \"vue\";\r\nimport { Dialog, LoadingBar, Message } from \"@/utils/tips\";\r\n\r\nimport StatusCard from \"./components/StatusCard.vue\";\r\n// import StatusCard from \"./components/StatusCard copy.vue\";\r\n\r\n\r\n\r\nimport { ChatConversationDetail, ChatMessage } from \"@/types/custom\";\r\nimport { AskInfo, getAskWebsocketApiUrl } from \"@/api/chat\";\r\n\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { NButton, NEllipsis, NIcon, useThemeVars } from \"naive-ui\";\r\nimport {\r\n  Add,\r\n  ChatboxEllipses,\r\n  LogoMarkdown,\r\n  Print,\r\n  Send,\r\n  ArrowDown,\r\n} from \"@vicons/ionicons5\";\r\nimport {\r\n  FullscreenRound,\r\n  KeyboardDoubleArrowDownRound,\r\n  KeyboardDoubleArrowUpRound,\r\n} from \"@vicons/material\";\r\nimport {\r\n  dropdownRenderer,\r\n  getCountTrans,\r\n  getModelNameTrans,\r\n  popupChangeConversationTitleDialog,\r\n  popupNewConversationDialog,\r\n} from \"@/utils/renders\";\r\nimport { saveAs } from \"file-saver\";\r\nimport HistoryContent from \"@/views/conversation/components/HistoryContent.vue\";\r\n\r\nimport { getConvMessageListFromId } from \"@/utils/conversation\";\r\nconst themeVars = useThemeVars();\r\n\r\nconst { t } = useI18n();\r\n\r\n\r\nconst rootRef = ref();\r\nconst menuRef = ref(null);\r\nconst historyRef = ref();\r\nconst userStore = useUserStore();\r\nconst conversationStore = useConversationStore();\r\n\r\nconst inputExpanded = ref<boolean>(false);\r\nconst inputHeight = computed(() => (inputExpanded.value ? \"50vh\" : \"24vh\"));\r\nconst toggleInputExpanded = () => {\r\n  inputExpanded.value = !inputExpanded.value;\r\n};\r\n\r\nconst loadingBar = ref(false);\r\nconst loadingHistory = ref<boolean>(false);\r\n\r\nconst currentAvaliableAskCountsTip = computed(() => {\r\n  let result = \"\";\r\n  if (userStore.user?.available_ask_count != -1)\r\n    result += `${t(\"commons.availableAskCount\")}: ${getCountTrans(\r\n      userStore.user?.available_ask_count!\r\n    )}   `;\r\n  if (\r\n    currentConversation.value &&\r\n    currentConversation.value.model_name === \"gpt-4\" &&\r\n    userStore.user?.available_gpt4_ask_count != -1\r\n  )\r\n    result += `${t(\"commons.availableGPT4AskCount\")}: ${getCountTrans(\r\n      userStore.user?.available_gpt4_ask_count!\r\n    )}`;\r\n  return result;\r\n});\r\n\r\nconst newConversation = ref<ConversationSchema | null>(null);\r\nconst currentConversationId = ref<string | null>(null);\r\nconst currentConversation = computed<ConversationSchema>(() => {\r\n  if (newConversation.value?.conversation_id === currentConversationId.value)\r\n    return newConversation.value;\r\n  const conv = conversationStore.conversations?.find(\r\n    (conversation: ConversationSchema) => {\r\n      return conversation.conversation_id == currentConversationId.value;\r\n    }\r\n  );\r\n  return conv;\r\n});\r\n\r\nconst inputValue = ref(\"\");\r\nconst currentActiveMessageSend = ref<ChatMessage | null>(null);\r\nconst currentActiveMessageRecv = ref<ChatMessage | null>(null);\r\nconst currentMessageListDisplay = computed(() => {\r\n  const conversationId = currentConversation.value?.conversation_id;\r\n  if (!conversationId) return [];\r\n  // const _ensure_conv = conversationStore.conversationDetailMap[props.conversationId];\r\n  let result = getConvMessageListFromId(conversationId);\r\n  if (currentActiveMessages.value.length > 0) {\r\n    result = result.concat(currentActiveMessages.value);\r\n  }\r\n  return result;\r\n});\r\n\r\n// 从 store 中获取对话列表\r\nconst menuOptions = computed(() => {\r\n  // 根据 created_time 降序排序\r\n  const sorted_conversations = conversationStore.conversations?.sort(\r\n    (a: ConversationSchema, b: ConversationSchema) => {\r\n      // return a.create_time - b.create_time;\r\n      if (!a.create_time) return -1;\r\n      if (!b.create_time) return 1;\r\n      const date_a = new Date(a.create_time),\r\n        date_b = new Date(b.create_time);\r\n      return date_b.getTime() - date_a.getTime();\r\n    }\r\n  );\r\n  const results = sorted_conversations?.map(\r\n    (conversation: ConversationSchema) => {\r\n      return {\r\n        label: () => h(NEllipsis, null, { default: () => conversation.title }),\r\n        key: conversation.conversation_id,\r\n        disabled: loadingBar.value == true,\r\n        extra: () =>\r\n          dropdownRenderer(\r\n            conversation,\r\n            handleDeleteConversation,\r\n            handleChangeConversationTitle,\r\n            exportToMarkdownFile\r\n          ),\r\n      };\r\n    }\r\n  );\r\n  if (newConversation.value) {\r\n    results?.unshift({\r\n      label: newConversation.value.title,\r\n      key: newConversation.value.conversation_id,\r\n      disabled: loadingBar.value == true,\r\n    });\r\n    // console.log(newConversation.value)\r\n  }\r\n  return results;\r\n});\r\n\r\n// 删除 对话\r\nconst handleDeleteConversation = (conversation_id: string | undefined) => {\r\n  if (!conversation_id) return;\r\n  const d = Dialog.info({\r\n    title: t(\"commons.confirmDialogTitle\"),\r\n    content: t(\"tips.deleteConversation\"),\r\n    positiveText: t(\"commons.confirm\"),\r\n    negativeText: t(\"commons.cancel\"),\r\n    onPositiveClick: () => {\r\n      d.loading = true;\r\n      return new Promise((resolve) => {\r\n        conversationStore\r\n          .deleteConversation(conversation_id)\r\n          .then(() => {\r\n            Message.success(t(\"tips.deleteConversationSuccess\"));\r\n            if (currentConversationId.value == conversation_id)\r\n              currentConversationId.value = null;\r\n          })\r\n          .catch(() => {\r\n            Message.error(t(\"tips.deleteConversationFailed\"));\r\n          })\r\n          .finally(() => {\r\n            d.loading = false;\r\n            resolve(true);\r\n          });\r\n      });\r\n    },\r\n  });\r\n};\r\n\r\n// 修改 对话 标题\r\nconst handleChangeConversationTitle = (conversation_id: string | undefined) => {\r\n  if (!conversation_id) return;\r\n  popupChangeConversationTitleDialog(\r\n    conversation_id,\r\n    async (title: string) => {\r\n      await conversationStore.changeConversationTitle(conversation_id, title);\r\n    },\r\n    () => {\r\n      Message.success(t(\"tips.changeConversationTitleSuccess\"));\r\n    },\r\n    () => {\r\n      Message.error(t(\"tips.changeConversationTitleFailed\"));\r\n    }\r\n  );\r\n};\r\n\r\n// 从 store 中获取当前对话最新消息的 id\r\nconst currentNode = computed<string | undefined>(() => {\r\n  if (currentConversation.value?.conversation_id)\r\n    return conversationStore.conversationDetailMap[\r\n      currentConversation.value?.conversation_id\r\n    ]?.current_node;\r\n  else return undefined;\r\n});\r\n\r\n// 从 store 中获取当前对话的消息列表，将链表转换为数组\r\n// const currentMessageList = computed<Array<ChatMessage>>(() => {\r\n\r\n//   console.log(\"currentMessageList\", result);\r\n//   return result;\r\n// });\r\n\r\n// 实际的 currentMessageList，加上当前正在发送的消息\r\nconst currentActiveMessages = computed<Array<ChatMessage>>(() => {\r\n  const result: ChatMessage[] = [];\r\n  if (\r\n    currentActiveMessageSend.value &&\r\n    result.findIndex(\r\n      (message) => message.id === currentActiveMessageSend.value?.id\r\n    ) === -1\r\n  )\r\n    result.push(currentActiveMessageSend.value);\r\n  if (\r\n    currentActiveMessageRecv.value &&\r\n    result.findIndex(\r\n      (message) => message.id === currentActiveMessageRecv.value?.id\r\n    ) === -1\r\n  )\r\n    result.push(currentActiveMessageRecv.value);\r\n  return result;\r\n});\r\n\r\nwatch(currentConversationId, (newVal, oldVal) => {\r\n  if (newVal != \"new_conversation\") {\r\n    handleChangeConversation(newVal);\r\n    localStorage.removeItem('title')\r\n    localStorage.setItem('id', String(newVal))\r\n    console.log(localStorage.getItem('id'))\r\n  }\r\n});\r\n\r\n// 接收子组件 传递的 prompt 选项\r\nconst show = (e:any) => {\r\n  inputValue.value = e\r\n  console.log(e)\r\n}\r\n\r\nconst handleChangeConversation = (key: string | null) => {\r\n  // TODO: 清除当前已询问、得到回复，但是发生错误的两条消息\r\n  if (loadingBar.value || !key) return;\r\n  loadingBar.value = true;\r\n  loadingHistory.value = true;\r\n  LoadingBar.start();\r\n  conversationStore\r\n    .fetchConversationHistory(key)\r\n    .then(() => {\r\n      // console.log('aa',conversationStore.conversationDetailMap);\r\n    })\r\n    .catch((err: any) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      loadingBar.value = false;\r\n      loadingHistory.value = false;\r\n      LoadingBar.finish();\r\n    });\r\n};\r\n\r\nconst sendDisabled = computed(() => {\r\n  return (\r\n    loadingBar.value ||\r\n    currentConversationId.value == null ||\r\n    inputValue.value === null ||\r\n    inputValue.value.trim() == \"\"\r\n  );\r\n});\r\n\r\nconst makeNewConversation = () => {\r\n  if (newConversation.value) return;\r\n  popupNewConversationDialog(async (title: string, model_name: any) => {\r\n    console.log(title, model_name);\r\n    newConversation.value = {\r\n      conversation_id: \"new_conversation\",\r\n      // 默认标题格式：MMDD - username\r\n      title:\r\n        title ||\r\n        `New Chat ${new Date().toLocaleString()} - ${userStore.user?.username}`,\r\n      model_name: model_name || \"text-davinci-002-render-sha\",\r\n      create_time: new Date().toISOString(), // 仅用于当前排序到顶部\r\n    };\r\n    currentConversationId.value = \"new_conversation\";\r\n    localStorage.removeItem('id')\r\n    localStorage.setItem('title', String(newConversation.value.title))\r\n  });\r\n};\r\n\r\nconst shortcutSendMsg = (e: KeyboardEvent) => {\r\n  e.preventDefault();\r\n  sendMsg();\r\n};\r\n\r\nconst autoScrolling = ref<boolean>(true);\r\n\r\nconst scrollToBottom = () => {\r\n  historyRef.value.scrollTo({\r\n    left: 0,\r\n    top: historyRef.value.$refs.scrollbarInstRef.contentRef.scrollHeight,\r\n  });\r\n};\r\n\r\nconst scrollToBottomSmooth = () => {\r\n  historyRef.value.scrollTo({\r\n    left: 0,\r\n    top: historyRef.value.$refs.scrollbarInstRef.contentRef.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n\r\nconst sendMsg = async () => {\r\n  if (sendDisabled.value || loadingBar.value) {\r\n    return;\r\n  }\r\n\r\n  LoadingBar.start();\r\n  loadingBar.value = true;\r\n  const message = inputValue.value;\r\n  inputValue.value = \"\";\r\n\r\n  // // 新建对话\r\n  // const askInfo: AskInfo = { message };\r\n  // // 继续发送\r\n  // if (currentConversation.value?.conversation_id != null) {\r\n  //   askInfo.conversation_id = currentConversation.value.conversation_id;\r\n  //   askInfo.parent_id = currentNode.value!;\r\n  // }\r\n  const askInfo: AskInfo = { message };\r\n  if (newConversation.value) {\r\n    askInfo.new_title = newConversation.value.title;\r\n    askInfo.model_name = newConversation.value.model_name;\r\n  } else {\r\n    askInfo.conversation_id = currentConversation.value!.conversation_id;\r\n    askInfo.parent_id = currentNode.value!;\r\n  }\r\n\r\n  // 使用临时的随机 id 保持当前更新的两个消息\r\n  const random_strid = Math.random().toString(36).substring(2, 16);\r\n  currentActiveMessageSend.value = {\r\n    id: `send_${random_strid}`,\r\n    message,\r\n    author_role: \"user\",\r\n    parent: currentNode.value,\r\n    children: [`recv_${random_strid}`],\r\n  };\r\n  currentActiveMessageRecv.value = {\r\n    id: `recv_${random_strid}`,\r\n    message: \"\",\r\n    author_role: \"assistent\",\r\n    parent: `send_${random_strid}`,\r\n    children: [],\r\n    typing: true,\r\n    model_slug: currentConversation.value?.model_name,\r\n  };\r\n  const wsUrl = getAskWebsocketApiUrl();\r\n  let wsErrorMessage: string | null = null;\r\n  console.log(\"Connecting to\", wsUrl, askInfo);\r\n  const webSocket = new WebSocket(wsUrl);\r\n\r\n  webSocket.onopen = (event: Event) => {\r\n    // console.log('WebSocket connection is open', askInfo);\r\n    webSocket.send(JSON.stringify(askInfo));\r\n  };\r\n\r\n  webSocket.onmessage = (event: MessageEvent) => {\r\n    const reply = JSON.parse(event.data);\r\n    // console.log('Received message from server:', reply);\r\n    if (!reply.type) return;\r\n    if (reply.type === \"waiting\") {\r\n      currentActiveMessageRecv.value!.message = t(reply.tip);\r\n      if (reply.waiting_count) {\r\n        currentActiveMessageRecv.value!.message += `(${reply.waiting_count})`;\r\n      }\r\n    } else if (reply.type === \"message\") {\r\n      // console.log(reply)\r\n      currentActiveMessageRecv.value!.message = reply.message;\r\n      currentActiveMessageRecv.value!.id = reply.parent_id;\r\n      currentActiveMessageRecv.value!.model_slug = reply.model_name;\r\n      if (newConversation.value) {\r\n        newConversation.value.conversation_id = reply.conversation_id;\r\n        if (\r\n          currentConversationId.value !== newConversation.value.conversation_id\r\n        ) {\r\n          currentConversationId.value = newConversation.value.conversation_id!;\r\n        }\r\n      }\r\n    } else if (reply.type === \"error\") {\r\n      currentActiveMessageRecv.value!.message = `${t(reply.tip)}: ${reply.message\r\n        }}`;\r\n      console.error(reply.tip, reply.message);\r\n      if (reply.message) {\r\n        wsErrorMessage = reply.message;\r\n      }\r\n    }\r\n    if (autoScrolling.value) scrollToBottom();\r\n  };\r\n\r\n  webSocket.onclose = async (event: CloseEvent) => {\r\n    currentActiveMessageRecv.value!.typing = false;\r\n    console.log(\"WebSocket connection is closed\", event);\r\n    if (event.code === 1000) {\r\n      // 正常关闭\r\n      // 对于新对话，重新请求对话列表\r\n      if (newConversation.value) {\r\n        await conversationStore.fetchAllConversations();\r\n        currentConversationId.value = newConversation.value.conversation_id!;\r\n        // 解析 ISO string 为 小数时间戳\r\n        const create_time =\r\n          new Date(newConversation.value.create_time!).getTime() / 1000;\r\n        conversationStore.$patch({\r\n          conversationDetailMap: {\r\n            [currentConversationId.value]: {\r\n              id: currentConversationId.value,\r\n              title: newConversation.value!.title,\r\n              model_name: newConversation.value!.model_name,\r\n              create_time,\r\n              mapping: {},\r\n              current_node: null,\r\n            } as ChatConversationDetail,\r\n          },\r\n        });\r\n        conversationStore.addMessageToConversation(\r\n          currentConversationId.value,\r\n          currentActiveMessageSend.value!,\r\n          currentActiveMessageRecv.value!\r\n        );\r\n        newConversation.value = null;\r\n      } else {\r\n        // 将新消息存入 store\r\n        if (!currentActiveMessageRecv.value!.id.startsWith(\"recv\")) {\r\n          // TODO 其它属性\r\n          conversationStore.addMessageToConversation(\r\n            currentConversationId.value,\r\n            currentActiveMessageSend.value!,\r\n            currentActiveMessageRecv.value!\r\n          );\r\n        }\r\n      }\r\n      currentActiveMessageSend.value = null;\r\n      currentActiveMessageRecv.value = null;\r\n    } else {\r\n      Dialog.error({\r\n        title: t(\"errors.askError\"),\r\n        content:\r\n          wsErrorMessage != null\r\n            ? `[${event.code}] ${t(event.reason)}: ${wsErrorMessage}`\r\n            : `[${event.code}] ${t(event.reason)}`,\r\n        positiveText: t(\"commons.withdrawMessage\"),\r\n        onPositiveClick: () => {\r\n          currentActiveMessageSend.value = null;\r\n          currentActiveMessageRecv.value = null;\r\n        },\r\n      });\r\n    }\r\n    await userStore.fetchUserInfo();\r\n    LoadingBar.finish();\r\n    loadingBar.value = false;\r\n  };\r\n\r\n  webSocket.onerror = (event: Event) => {\r\n    console.error(\"WebSocket error:\", event);\r\n  };\r\n};\r\n\r\nconst exportToMarkdownFile = () => {\r\n  if (!currentConversation.value) {\r\n    Message.error(t(\"tips.pleaseSelectConversation\"));\r\n    return;\r\n  }\r\n  let content = `# ${currentConversation.value!.title}\\n\\n`;\r\n  const create_time = new Date(\r\n    currentConversation.value!.create_time! + \"Z\"\r\n  ).toLocaleString();\r\n  content += `Date: ${create_time}\\nModel: ${getModelNameTrans(\r\n    currentConversation.value!.model_name as any\r\n  )}\\n`;\r\n  content +=\r\n    \"generated by [ChatGPT Web Share](https://github.com/moeakwak/chatgpt-web-share)\\n\\n\";\r\n  content += \"---\\n\\n\";\r\n  let index = 0;\r\n  for (const message of currentMessageListDisplay.value) {\r\n    if (message.author_role === \"user\") {\r\n      // 选取第一行作为标题，最多50个字符，如果有省略则加上...\r\n      let title = message.message!.trim().split(\"\\n\")[0];\r\n      if (title.length >= 50) {\r\n        title = title.slice(0, 47) + \"...\";\r\n      }\r\n      content += `## ${++index}. ${title}\\n\\n`;\r\n      content += `### User\\n\\n${message.message}\\n\\n`;\r\n    } else {\r\n      content += `### ChatGPT\\n\\n${message.message}\\n\\n`;\r\n      content += \"---\\n\\n\";\r\n    }\r\n  }\r\n  const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\r\n  saveAs(blob, `${currentConversation.value!.title} - ChatGPT history.md`);\r\n};\r\n\r\nconst historyContentRef = ref();\r\nconst showFullscreenTips = ref(false);\r\n\r\n// const showFullscreenHistory = () => {\r\n//   if (!currentConversation.value) {\r\n//     Message.error(t('tips.pleaseSelectConversation'));\r\n//     return;\r\n//   }\r\n//   // focus historyContentRef\r\n//   historyContentRef.value.focus();\r\n//   historyContentRef.value.toggleFullscreenHistory(true);\r\n// }\r\n\r\n// const exportToPdfFile = () => {\r\n//   if (!currentConversation.value) {\r\n//     Message.error(t('tips.pleaseSelectConversation'));\r\n//     return;\r\n//   }\r\n//   historyContentRef.value.toggleFullscreenHistory(false);\r\n//   window.print();\r\n//   historyContentRef.value.toggleFullscreenHistory(false);\r\n// }\r\n\r\n// 加载对话列表\r\nconversationStore.fetchAllConversations().then(() => { });\r\n</script>\r\n\r\n<style>\r\ntextarea.n-input__textarea-el {\r\n  resize: none;\r\n}\r\n\r\ndiv.n-menu-item-content-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\nspan.n-menu-item-content-header__extra {\r\n  display: inline-block;\r\n}\r\n\r\n.n-divider {\r\n  margin-bottom: 0px !important;\r\n  margin-top: 0px !important;\r\n}\r\n\r\n.left-col .n-card__content {\r\n  @apply flex flex-col @apply overflow-auto !important;\r\n}\r\n\r\n@media print {\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n\r\n  #print-content * {\r\n    visibility: visible;\r\n  }\r\n\r\n  /* no margin in page */\r\n  @page {\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n}\r\n</style>"],"names":["checkStrategyIsChild","ref","showPath","hoverTrigger","filterable","value","getOptions","depth","iterator","parent_id","options2","i","data","options","getPromptListAPI","givePrompt","value2","emitPromt","handleUpdateValue","option","themeVars","useThemeVars","t","useI18n","rootRef","menuRef","historyRef","userStore","useUserStore","conversationStore","useConversationStore","inputExpanded","inputHeight","computed","toggleInputExpanded","loadingBar","loadingHistory","currentAvaliableAskCountsTip","result","_a","getCountTrans","_b","currentConversation","_c","_d","newConversation","currentConversationId","conversation","inputValue","currentActiveMessageSend","currentActiveMessageRecv","currentMessageListDisplay","conversationId","getConvMessageListFromId","currentActiveMessages","menuOptions","sorted_conversations","a","b","date_a","results","h","NEllipsis","dropdownRenderer","handleDeleteConversation","handleChangeConversationTitle","exportToMarkdownFile","conversation_id","d","Dialog","resolve","Message","popupChangeConversationTitleDialog","title","currentNode","message","watch","newVal","oldVal","handleChangeConversation","show","key","LoadingBar","err","sendDisabled","makeNewConversation","popupNewConversationDialog","model_name","shortcutSendMsg","sendMsg","autoScrolling","scrollToBottom","scrollToBottomSmooth","askInfo","random_strid","wsUrl","getAskWebsocketApiUrl","wsErrorMessage","webSocket","event","reply","create_time","content","getModelNameTrans","index","blob","saveAs","historyContentRef","showFullscreenTips"],"mappings":"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"}