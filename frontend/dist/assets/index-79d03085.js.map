{"version":3,"file":"index-79d03085.js","sources":["../../src/views/conversationv3/components/StatusCard.vue","../../src/utils/rendersv3.ts","../../src/views/conversationv3/components/MessageRow.vue","../../src/views/conversationv3/components/HistoryContent.vue","../../src/views/conversationv3/index.vue"],"sourcesContent":["<template>\r\n  <n-card content-style=\"padding: 0;\">\r\n    <n-collapse @update:expanded-names=\"handleExpand\">\r\n      <n-collapse-item :title=\"$t('commons.serverStatus')\" name=\"serverStatus\">\r\n        <n-list hoverable show-divider>\r\n          <n-list-item>\r\n            <div class=\"flex flex-row justify-between content-center\">\r\n              <div><n-icon class=\"mr-1\"><md-people /></n-icon>{{ $t(\"commons.activeUserIn5m\") }}</div>\r\n              <div>{{ serverStatus.active_user_in_5m }}</div>\r\n            </div>\r\n          </n-list-item>\r\n          <n-list-item>\r\n            <div class=\"flex flex-row justify-between content-center\">\r\n              <div><n-icon class=\"mr-1\"><md-people /></n-icon>{{ $t(\"commons.activeUserIn1h\") }}</div>\r\n              <div>{{ serverStatus.active_user_in_1h }}</div>\r\n            </div>\r\n          </n-list-item>\r\n          <n-list-item>\r\n            <div class=\"flex flex-row justify-between content-center\">\r\n              <div><n-icon class=\"mr-1\"><md-people /></n-icon>{{ $t(\"commons.activeUserIn1d\") }}</div>\r\n              <div>{{ serverStatus.active_user_in_1d }}</div>\r\n            </div>\r\n          </n-list-item>\r\n          <n-list-item>\r\n            <div class=\"flex flex-row justify-between content-center\">\r\n              <div><n-icon class=\"mr-1\">\r\n                  <EventBusyFilled />\r\n                </n-icon>{{ $t(\"commons.isChatbotBusy\") }}</div>\r\n              <div>{{ serverStatus.is_chatbot_busy ? $t(\"commons.yes\") : $t(\"commons.no\") }}</div>\r\n            </div>\r\n          </n-list-item>\r\n          <n-list-item>\r\n            <div class=\"flex flex-row justify-between content-center\">\r\n              <div><n-icon class=\"mr-1\">\r\n                  <QueueFilled />\r\n                </n-icon>{{ $t(\"commons.chatbotWaitingCount\") }}</div>\r\n              <div>{{ serverStatus.chatbot_waiting_count }}</div>\r\n            </div>\r\n          </n-list-item>\r\n        </n-list>\r\n      </n-collapse-item>\r\n    </n-collapse>\r\n  </n-card>\r\n</template> \r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref } from 'vue';\r\nimport { getServerStatusApi } from \"@/api/status\"\r\nimport { ServerStatusSchema } from '@/types/schema';\r\nimport { MdPeople } from '@vicons/ionicons4';\r\nimport { EventBusyFilled, QueueFilled } from '@vicons/material';\r\nimport { useI18n } from 'vue-i18n';\r\nconst { t } = useI18n();\r\nconst serverStatus = ref<ServerStatusSchema>({});\r\n\r\nconst isExpaned = ref(false);\r\n\r\nconst handleExpand = (names: string[]) => {\r\n  if (names.length > 0) {\r\n    isExpaned.value = true;\r\n    updateData();\r\n  } else {\r\n    isExpaned.value = false;\r\n  }\r\n};\r\n\r\nconst updateData = () => {\r\n  if (isExpaned.value)\r\n    getServerStatusApi().then((res) => {\r\n      // console.log(res.data);\r\n      serverStatus.value = res.data;\r\n    });\r\n};\r\nupdateData();\r\nsetInterval(updateData, 5000);\r\n</script>\r\n\r\n<style>\r\ndiv.n-collapse-item {\r\n  padding: 1em;\r\n}\r\n</style>\r\n","import {\r\n    NDropdown,\r\n    NButton,\r\n    NIcon,\r\n    NInput,\r\n    NSelect,\r\n    SelectOption,\r\n  } from \"naive-ui\";\r\n  import { h } from \"vue\";\r\n  import { MdMore } from \"@vicons/ionicons4\";\r\n  import { i18n } from \"@/i18n\";\r\n  import { ConversationSchema } from \"@/types/schema\";\r\n  import { Dialog } from \"@/utils/tips\";\r\n  import useUserStore from \"@/store/modules/user\";\r\n  \r\n  const t = i18n.global.t as any;\r\n    const dropdownRendererV3 = (\r\n      conversation: ConversationSchema,\r\n      handleDeleteConversation: (chat_id?: string) => void,\r\n      handleChangeConversationTitle: (chat_id?: string) => void,\r\n      handleExportToMarkdownFile: () => void\r\n    ) =>\r\n      h(\r\n        NDropdown,\r\n        {\r\n          trigger: \"hover\",\r\n          options: [\r\n            {\r\n              label: t(\"commons.delete\"),\r\n              key: \"delete\",\r\n              props: {\r\n                onClick: () =>\r\n                  handleDeleteConversation(conversation.chat_id),\r\n              },\r\n            },\r\n            {\r\n              label: t(\"commons.rename\"),\r\n              key: \"rename\",\r\n              props: {\r\n                onClick: () =>\r\n                handleChangeConversationTitle(conversation.chat_id),\r\n              },\r\n            },\r\n            {\r\n              label: t(\"commons.download\"),\r\n              key: \"download\",\r\n              props: {\r\n                onClick: () =>\r\n                handleExportToMarkdownFile(),\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          default: () =>\r\n            h(\r\n              NButton,\r\n              {\r\n                size: \"small\",\r\n                quaternary: true,\r\n                circle: true,\r\n              },\r\n              { default: () => h(NIcon, null, { default: () => h(MdMore) }) }\r\n            ),\r\n        }\r\n      );\r\n  \r\n  const getAvailableModelOptions = (type: string): SelectOption[] => {\r\n    const userStore = useUserStore();\r\n    let options: any = []\r\n    if(type === \"conversation\"){\r\n      options = [{ label: t('commons.shaModel'), value: 'text-davinci-002-render-sha' }];\r\n    }else{\r\n      options = [\r\n        { label: \"gpt-3.5-turbo\", value: \"gpt-3.5-turbo\" },\r\n        { label: \"gpt-3.5-turbo-0301\", value: \"gpt-3.5-turbo-0301\" },\r\n        { label: \"gpt-4\", value: \"gpt-4\" },\r\n        { label: \"gpt-4-0314\", value: \"gpt-4-0314\" },\r\n        { label: \"gpt-4-32k\", value: \"gpt-4-32k\" },\r\n        { label: \"gpt-4-32k-0314\", value: \"gpt-4-32k-0314\" }\r\n      ];\r\n    }\r\n    if (userStore.user?.can_use_paid)\r\n      options.push({\r\n        label: t(\"commons.paidModel\"),\r\n        value: \"text-davinci-002-render-paid\",\r\n      });\r\n    if (userStore.user?.can_use_gpt4)\r\n      options.push({ label: t(\"commons.gpt4Model\"), value: \"gpt-4\" });\r\n    return options;\r\n  };\r\n  \r\n  const popupNewConversationV3Dialog = (\r\n    callback: (_conv_title: string, _conv_model: string) => Promise<any>\r\n  ) => {\r\n    let convTitle = \"\";\r\n    let convModel = \"\";\r\n    const d = Dialog.info({\r\n      title: t(\"commons.newConversation\"),\r\n      positiveText: t(\"commons.confirm\"),\r\n      negativeText: t(\"commons.cancel\"),\r\n      // content: () =>\r\n      //   h(NInput, { onInput: (e) => (input = e), autofocus: true, placeholder: placeholder, }),\r\n  \r\n      // 用一个 NInput 和一个 NSelect\r\n      content: () =>\r\n        h(\r\n          \"div\",\r\n          {\r\n            style: \"display: flex; flex-direction: column; gap: 16px;\",\r\n          },\r\n          [\r\n            h(NInput, {\r\n              onInput: (e) => (convTitle = e),\r\n              autofocus: true,\r\n              placeholder: t(\"tips.conversationTitle\"),\r\n            }),\r\n            h(NSelect, {\r\n              placeholder: t(\"tips.whetherUsePaidModel\"),\r\n              \"onUpdate:value\": (value: string) => (convModel = value),\r\n              options: getAvailableModelOptions(\"conversationv3\"),\r\n            }),\r\n          ]\r\n        ),\r\n      onPositiveClick() {\r\n        d.loading = true;\r\n        return new Promise((resolve) => {\r\n          callback(convTitle, convModel)\r\n            .then(() => {\r\n              resolve(true);\r\n            })\r\n            .catch(() => {\r\n              resolve(true);\r\n            })\r\n            .finally(() => {\r\n              d.loading = false;\r\n            });\r\n        });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export {\r\n    dropdownRendererV3,\r\n    popupNewConversationV3Dialog\r\n  };\r\n  ","<template>\r\n  <div\r\n    class=\"flex flex-col md:flex-row py-2 md:py-4 px-5 md:px-4 max-w-full relative\"\r\n    :style=\"{ backgroundColor: backgroundColor }\"\r\n  >\r\n    <div class=\"w-10 ml-0 md:ml-2 mt-3\">\r\n      <!-- <n-text class=\"inline-block mt-4\">{{ props.message.author_role == 'user' ? 'User' : 'ChatGPT' }}</n-text> -->\r\n      <n-avatar v-if=\"props.message.author_role == 'user'\" size=\"small\">\r\n        <n-icon>\r\n          <PersonFilled />\r\n        </n-icon>\r\n      </n-avatar>\r\n      <n-avatar v-else size=\"small\" src=\"/chatgpt-icon.svg\" />\r\n    </div>\r\n    <div class=\"mx-0 md:mx-4 w-full\">\r\n      <div\r\n        v-show=\"!showRawContent\"\r\n        ref=\"contentRef\"\r\n        class=\"message-content w-full\"\r\n        v-html=\"renderedContent\"\r\n      ></div>\r\n      <div\r\n        v-show=\"showRawContent\"\r\n        class=\"my-3 w-full whitespace-pre-line text-gray-500\"\r\n      >{{ props.message.message }}</div>\r\n      <div class=\"hide-in-print\">\r\n        <n-button\r\n          text\r\n          ghost\r\n          type=\"tertiary\"\r\n          size=\"tiny\"\r\n          class=\"mt-2 -ml-2 absolute bottom-3 right-3 md:bottom-1 md:right-1\"\r\n          @click=\"copyMessageContent\"\r\n        >\r\n          <n-icon>\r\n            <CopyOutline />\r\n          </n-icon>\r\n        </n-button>\r\n        <n-button\r\n          text\r\n          ghost\r\n          size=\"tiny\"\r\n          :type=\"showRawContent ? 'success' : 'tertiary'\"\r\n          class=\"mt-2 -ml-2 absolute bottom-3 right-9 md:bottom-1 md:right-5\"\r\n          @click=\"toggleShowRawContent\"\r\n        >\r\n          <n-icon>\r\n            <CodeSlash />\r\n          </n-icon>\r\n        </n-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref, onMounted } from \"vue\";\r\nimport { ChatV3Message } from \"@/types/customv3\";\r\nimport { useThemeVars } from \"naive-ui\";\r\nimport { PersonFilled } from \"@vicons/material\";\r\nimport { CopyOutline, CodeSlash } from \"@vicons/ionicons5\";\r\nimport { Message } from \"@/utils/tips\";\r\nimport { useI18n } from \"vue-i18n\";\r\n// import md from \"@/utils/markdown\";\r\nlet md: any;\r\nlet mdLoaded = ref(false);\r\n\r\nonMounted(() => {\r\n  import(\"@/utils/markdown\").then((module) => {\r\n    md = module.default;\r\n    mdLoaded.value = true;\r\n  });\r\n});\r\n\r\nconst { t } = useI18n();\r\n\r\nconst themeVars = useThemeVars();\r\n\r\nlet observer = null;\r\n\r\nconst contentRef = ref<HTMLDivElement>();\r\nconst showRawContent = ref(false);\r\n\r\nconst toggleShowRawContent = () => {\r\n  showRawContent.value = !showRawContent.value;\r\n};\r\n\r\nconst props = defineProps<{\r\n  message: ChatV3Message;\r\n}>();\r\n\r\nconst backgroundColor = computed(() => {\r\n  if (props.message.author_role == \"user\") {\r\n    return themeVars.value.bodyColor;\r\n  } else {\r\n    return themeVars.value.actionColor;\r\n  }\r\n});\r\n\r\nconst renderedContent = computed(() => {\r\n  if (!mdLoaded.value) {\r\n    return \"\";\r\n  }\r\n  const result = md.render(props.message.message || \"\");\r\n  return addButtonsToPreTags(result);\r\n});\r\n\r\nfunction addButtonsToPreTags(htmlString: string): string {\r\n  // Parse the HTML string into an Element object.\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(htmlString, \"text/html\");\r\n\r\n  // Get all the <pre> elements in the document.\r\n  const preTags = doc.getElementsByTagName(\"pre\");\r\n\r\n  // Loop through the <pre> elements and add a <button> to each one.\r\n  for (let i = 0; i < preTags.length; i++) {\r\n    const preTag = preTags[i];\r\n\r\n    const button = Object.assign(document.createElement(\"button\"), {\r\n      innerHTML: \"\",\r\n      className: \"hljs-copy-button hide-in-print\",\r\n    });\r\n    button.dataset.copied = \"false\";\r\n    preTag.classList.add(\"hljs-copy-wrapper\");\r\n\r\n    // Add a custom proprety to the code block so that the copy button can reference and match its background-color value.\r\n    preTag.style.setProperty(\r\n      \"--hljs-theme-background\",\r\n      window.getComputedStyle(preTag).backgroundColor\r\n    );\r\n\r\n    preTag.appendChild(button);\r\n  }\r\n\r\n  // Serialize the modified Element object back into a string.\r\n  const serializer = new XMLSerializer();\r\n  return serializer.serializeToString(doc.documentElement);\r\n}\r\n\r\nonMounted(() => {\r\n  if (!contentRef.value) return;\r\n  const callback: MutationCallback = (\r\n    mutations: MutationRecord[],\r\n    observer: MutationObserver\r\n  ) => {\r\n    for (const mutation of mutations) {\r\n      if (mutation.type === \"childList\") {\r\n        bindOnclick();\r\n      }\r\n    }\r\n  };\r\n  observer = new MutationObserver(callback);\r\n  observer.observe(contentRef.value, { subtree: true, childList: true });\r\n  bindOnclick();\r\n});\r\n\r\nconst bindOnclick = () => {\r\n  // 获取模板引用中的所有 pre 元素和其子元素中的 button 元素\r\n  const preElements = contentRef.value?.querySelectorAll(\"pre\");\r\n  if (!preElements) return;\r\n  for (const preElement of preElements as any) {\r\n    for (const button of preElement.querySelectorAll(\"button\")) {\r\n      (button as HTMLButtonElement).onclick = () => {\r\n        if (!navigator.clipboard) return;\r\n        navigator.clipboard\r\n          .writeText(button.parentElement!.textContent || \"\")\r\n          .then(function () {\r\n            button.innerHTML = \"Copied!\";\r\n            button.dataset.copied = \"true\";\r\n\r\n            let alert: HTMLDivElement | null = Object.assign(\r\n              document.createElement(\"div\"),\r\n              {\r\n                role: \"status\",\r\n                className: \"hljs-copy-alert\",\r\n                innerHTML: \"Copied to clipboard\",\r\n              }\r\n            );\r\n            button.parentElement!.appendChild(alert);\r\n\r\n            setTimeout(() => {\r\n              if (alert) {\r\n                button.innerHTML = \"Copy\";\r\n                button.dataset.copied = \"false\";\r\n                button.parentElement!.removeChild(alert);\r\n                alert = null;\r\n              }\r\n            }, 2000);\r\n          })\r\n          .then();\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst copyMessageContent = () => {\r\n  if (!navigator.clipboard) return;\r\n  navigator.clipboard\r\n    .writeText(props.message.message || \"\")\r\n    .then(() => {\r\n      // console.log('copied', props.message.message);\r\n      Message.success(t(\"commons.copiedToClipboard\"));\r\n    })\r\n    .then();\r\n};\r\n</script>\r\n\r\n<style>\r\n/* modified from https://github.com/arronhunt/highlightjs-copy */\r\n\r\npre {\r\n  @apply w-full flex;\r\n}\r\n\r\npre code {\r\n  /* @apply w-full max-w-94 sm: max-w-138 md:max-w-156 lg:max-w-170 */\r\n  @apply w-0 flex-grow mr-0 font-mono;\r\n}\r\n\r\n@media print {\r\n  code {\r\n    @apply max-w-160 !important;\r\n  }\r\n}\r\n\r\np {\r\n  white-space: pre-line;\r\n}\r\n\r\nol,\r\nul {\r\n  padding-left: 16px;\r\n}\r\n\r\n.message-content table {\r\n  border: gray 1px solid;\r\n  @apply min-w-1/2 text-center border-collapse;\r\n}\r\n\r\n.message-content tr {\r\n  border: gray 1px solid;\r\n}\r\n\r\n.message-content th {\r\n  border: gray 1px solid;\r\n  @apply bg-gray-400;\r\n}\r\n\r\n.message-content td {\r\n  border: gray 1px solid;\r\n}\r\n\r\n.hljs-copy-wrapper {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.hljs-copy-wrapper:hover .hljs-copy-button,\r\n.hljs-copy-button:focus {\r\n  transform: translateX(0);\r\n}\r\n\r\n.hljs-copy-button {\r\n  position: absolute;\r\n  transform: translateX(calc(100% + 1.125em));\r\n  top: 1em;\r\n  right: 1.2em;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  text-indent: -9999px;\r\n  /* Hide the inner text */\r\n  color: #c5c5c5;\r\n  border-radius: 0.25rem;\r\n  border: 1px solid #c5c5c522;\r\n  /* background-color: #2d2b57; */\r\n\r\n  /* 白色，不透明度10% */\r\n  background-color: #ffffff1a;\r\n  background-image: url('data:image/svg+xml;utf-8,<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 5C5.73478 5 5.48043 5.10536 5.29289 5.29289C5.10536 5.48043 5 5.73478 5 6V20C5 20.2652 5.10536 20.5196 5.29289 20.7071C5.48043 20.8946 5.73478 21 6 21H18C18.2652 21 18.5196 20.8946 18.7071 20.7071C18.8946 20.5196 19 20.2652 19 20V6C19 5.73478 18.8946 5.48043 18.7071 5.29289C18.5196 5.10536 18.2652 5 18 5H16C15.4477 5 15 4.55228 15 4C15 3.44772 15.4477 3 16 3H18C18.7956 3 19.5587 3.31607 20.1213 3.87868C20.6839 4.44129 21 5.20435 21 6V20C21 20.7957 20.6839 21.5587 20.1213 22.1213C19.5587 22.6839 18.7957 23 18 23H6C5.20435 23 4.44129 22.6839 3.87868 22.1213C3.31607 21.5587 3 20.7957 3 20V6C3 5.20435 3.31607 4.44129 3.87868 3.87868C4.44129 3.31607 5.20435 3 6 3H8C8.55228 3 9 3.44772 9 4C9 4.55228 8.55228 5 8 5H6Z\" fill=\"black\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 3C7 1.89543 7.89543 1 9 1H15C16.1046 1 17 1.89543 17 3V5C17 6.10457 16.1046 7 15 7H9C7.89543 7 7 6.10457 7 5V3ZM15 3H9V5H15V3Z\" fill=\"black\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  transition: background-color 200ms ease, transform 200ms ease-out;\r\n}\r\n\r\n.hljs-copy-button:hover {\r\n  border-color: #91919144;\r\n}\r\n\r\n.hljs-copy-button:active {\r\n  border-color: #49494966;\r\n}\r\n\r\n.hljs-copy-button[data-copied=\"true\"] {\r\n  text-indent: 0px;\r\n  /* Shows the inner text */\r\n  width: auto;\r\n  background-image: none;\r\n}\r\n\r\n@media (prefers-reduced-motion) {\r\n  .hljs-copy-button {\r\n    transition: none;\r\n  }\r\n}\r\n\r\n/* visually-hidden */\r\n.hljs-copy-alert {\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(50%);\r\n  height: 1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n  color: #2d2b57;\r\n}\r\n</style>","<template>\r\n  <div ref=\"contentRef\" id=\"print-content\" class=\"flex flex-col h-full\" @keyup.esc=\"toggleFullscreenHistory(true)\" tabindex=\"0\" style=\"outline:none;\">\r\n    <div v-if=\"!props.loading\">\r\n      <!-- 消息记录 -->\r\n      <div class=\"flex justify-center py-4 px-4 max-w-full relative\" :style=\"{ backgroundColor: themeVars.baseColor }\">\r\n        <n-text>{{ $t(\"commons.currentConversationModel\") }}: {{ getModelNameTrans(modelName as any) }}\r\n        </n-text>\r\n        <n-button class=\"absolute left-4 hide-in-print\" v-if=\"_fullscreen\" text @click=\"toggleFullscreenHistory\">\r\n          <template #icon>\r\n            <n-icon>\r\n              <Close />\r\n            </n-icon>\r\n          </template>\r\n        </n-button>\r\n      </div>\r\n      <MessageRow :message=\"message\" v-for=\"message in messages\" :key=\"message.id\" />\r\n    </div>\r\n    <n-empty v-else class=\"h-full flex justify-center\" :style=\"{ backgroundColor: themeVars.cardColor }\" :description=\"$t('tips.loading')\">\r\n      <template #icon>\r\n        <n-spin size=\"medium\" />\r\n      </template>\r\n    </n-empty>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch, computed } from \"vue\";\r\nimport { useThemeVars } from \"naive-ui\";\r\nimport { getModelNameTrans } from \"@/utils/renders\";\r\nimport { ChatMessage } from \"@/types/custom\";\r\nimport { Message } from \"@/utils/tips\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { Close } from \"@vicons/ionicons5\";\r\nimport MessageRow from \"./MessageRow.vue\";\r\nimport { getModelNameFromMessages } from \"@/utils/conversation\";\r\n\r\nconst { t } = useI18n();\r\n\r\nconst themeVars = useThemeVars();\r\n\r\nconst props = defineProps<{\r\n  messages: ChatMessage[];\r\n  modelName?: string;\r\n  fullscreen: boolean;  // 初始状态下是否全屏\r\n  showTips: boolean;\r\n  loading: boolean;\r\n}>();\r\n\r\nconst contentRef = ref();\r\nconst historyContentParent = ref<HTMLElement>();\r\nconst _fullscreen = ref(false);\r\n\r\nconst modelName = computed(() => {\r\n  if (props.modelName) {\r\n    return props.modelName;\r\n  } else {\r\n    return getModelNameFromMessages(props.messages);\r\n  }\r\n});\r\n\r\nwatch(() => props.fullscreen, () => {\r\n  toggleFullscreenHistory(props.showTips);\r\n});\r\n\r\nconst toggleFullscreenHistory = (showTips: boolean) => {\r\n  // fullscreenHistory.value = !fullscreenHistory.value;\r\n  const appElement = document.getElementById('app');\r\n  const bodyElement = document.body;\r\n  const historyContentElement = contentRef.value;\r\n  if (_fullscreen.value) {\r\n    // 将 historyContent 移动回来\r\n    historyContentParent.value!.appendChild(historyContentElement);\r\n    if (appElement) appElement.style.display = 'block';\r\n  } else {\r\n    historyContentParent.value = historyContentElement.parentElement!;\r\n    // 移动到body child的第一个\r\n    bodyElement.insertBefore(historyContentElement, bodyElement.firstChild);\r\n    // 将div#app 设置为不可见\r\n    if (appElement) {\r\n      appElement.style.display = 'none';\r\n    }\r\n    historyContentElement.focus();\r\n    if (showTips)\r\n      Message.success(t('tips.pressEscToExitFullscreen'), {\r\n        duration: 2000,\r\n      });\r\n  }\r\n  _fullscreen.value = !_fullscreen.value;\r\n};\r\n\r\nif (props.fullscreen) {\r\n  toggleFullscreenHistory(props.showTips);\r\n}\r\n\r\nconst focus = () => {\r\n  contentRef.value.focus();\r\n};\r\n\r\ndefineExpose({\r\n  focus,\r\n  toggleFullscreenHistory\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div class=\"flex-grow mb-4\" ref=\"rootRef\">\r\n    <!-- 类似聊天室，左边栏是对话列表，右边栏是聊天窗口，使用naive-ui -->\r\n    <div class=\"h-full flex flex-col md:flex-row md:space-x-4\">\r\n      <!-- 左栏 -->\r\n      <div class=\"md:w-1/4 md:min-w-1/4 w-full flex flex-col space-y-4 md:h-full\">\r\n        <StatusCard />\r\n        <n-card class=\"h-full flex-col left-col\" content-style=\"padding: 4px;\">\r\n          <div class=\"flex box-content m-2\">\r\n            <n-button\r\n              secondary\r\n              strong\r\n              type=\"primary\"\r\n              class=\"flex-1\"\r\n              @click=\"makeNewConversation\"\r\n              :disabled=\"loadingBar\"\r\n            >\r\n              <template #icon>\r\n                <n-icon class>\r\n                  <Add />\r\n                </n-icon>\r\n              </template>\r\n              {{ $t(\"commons.newConversation\") }}\r\n            </n-button>\r\n          </div>\r\n          <n-scrollbar class=\"max-h-30 md:max-h-max md:min-h-0 md:flex-grow md:overflow-y-auto\">\r\n            <n-menu\r\n              :content-style=\"{ backgroundColor: 'red' }\"\r\n              ref=\"menuRef\"\r\n              :disabled=\"loadingBar\"\r\n              :options=\"menuOptions\"\r\n              :root-indent=\"18\"\r\n              v-model:value=\"currentChatId\"\r\n            ></n-menu>\r\n          </n-scrollbar>\r\n        </n-card>\r\n      </div>\r\n      <!-- 右栏 -->\r\n      <n-card\r\n        class=\"md:w-3/4 h-full\"\r\n        :bordered=\"true\"\r\n        content-style=\"padding: 0; display: flex; flex-direction: column;\"\r\n      >\r\n        <!-- 上半部分 -->\r\n        <n-scrollbar\r\n          class=\"h-140 sm:h-0 flex-grow\"\r\n          ref=\"historyRef\"\r\n          :content-style=\"{ height: '100%' }\"\r\n          v-if=\"currentChatId\"\r\n        >\r\n          <!-- 消息记录内容（用于全屏展示） -->\r\n          <!-- <n-button\r\n            secondary\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            @click=\"exportToMarkdownFile\"\r\n            style=\"float:right;margin:10px 10px 0px 0px\"\r\n          >\r\n            <template #icon>\r\n              <n-icon>\r\n                <LogoMarkdown />\r\n              </n-icon>\r\n            </template>\r\n          </n-button>-->\r\n          <HistoryContent\r\n            ref=\"historyContentRef\"\r\n            :messages=\"currentMessageListDisplay\"\r\n            :fullscreen=\"false\"\r\n            :model-name=\"currentConversation.model_name\"\r\n            :show-tips=\"showFullscreenTips\"\r\n            :loading=\"loadingHistory\"\r\n          />\r\n        </n-scrollbar>\r\n        <!-- 未选中对话 -->\r\n        <div\r\n          class=\"flex-grow flex flex-col justify-center\"\r\n          :style=\"{ backgroundColor: themeVars.cardColor }\"\r\n          v-else-if=\"!currentChatId\"\r\n        >\r\n          <n-empty v-if=\"!currentConversation\" :description=\"$t('tips.loadConversation')\">\r\n            <template #icon>\r\n              <n-icon>\r\n                <ChatboxEllipses />\r\n              </n-icon>\r\n            </template>\r\n            <template #extra>\r\n              <n-button @click=\"makeNewConversation\">{{ $t(\"tips.newConversation\") }}</n-button>\r\n            </template>\r\n          </n-empty>\r\n        </div>\r\n        <!-- 下半部分 -->\r\n        <div class=\"flex flex-col relative\" :style=\"{ height: inputHeight }\">\r\n          <n-divider />\r\n          <div class=\"right-4 -top-12 lg:-right-10 lg:-top-8 ml-1 absolute\">\r\n            <!-- 回到底部按钮 -->\r\n            <n-button @click=\"scrollToBottomSmooth\" secondary circle size=\"small\">\r\n              <template #icon>\r\n                <ArrowDown />\r\n              </template>\r\n            </n-button>\r\n          </div>\r\n          <!-- 工具栏 -->\r\n          <div class=\"flex flex-row space-x-2 py-2 justify-center relative\" style=\"height:20px\">\r\n            <!-- 展开/收起按钮 -->\r\n            <n-button\r\n              @click=\"toggleInputExpanded\"\r\n              quaternary\r\n              circle\r\n              size=\"small\"\r\n              class=\"absolute left-1\"\r\n            >\r\n              <template #icon>\r\n                <n-icon\r\n                  :component=\"inputExpanded ? KeyboardDoubleArrowDownRound : KeyboardDoubleArrowUpRound\"\r\n                ></n-icon>\r\n              </template>\r\n            </n-button>\r\n            <!-- 是否启用自动滚动 -->\r\n            <n-tooltip>\r\n              <template #trigger>\r\n                <n-switch v-model:value=\"autoScrolling\" size=\"small\" class=\"absolute left-8 top-3\">\r\n                  <template #icon>A</template>\r\n                </n-switch>\r\n              </template>\r\n              {{ $t(\"tips.autoScrolling\") }}\r\n            </n-tooltip>\r\n            <n-button\r\n              :disabled=\"sendDisabled\"\r\n              @click=\"sendMsg\"\r\n              class=\"absolute right-1\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n            >\r\n              {{ $t(\"commons.send\") }}\r\n              <template #icon>\r\n                <n-icon>\r\n                  <Send />\r\n                </n-icon>\r\n              </template>\r\n            </n-button>\r\n          </div>\r\n          <!-- 输入框 -->\r\n          <n-input\r\n            v-model:value=\"inputValue\"\r\n            class=\"flex-1\"\r\n            type=\"textarea\"\r\n            :bordered=\"false\"\r\n            :placeholder=\"$t('tips.sendMessage')\"\r\n            @keydown.shift.enter=\"shortcutSendMsg\"\r\n          />\r\n          <div class=\"m-2 flex flex-row justify-between\">\r\n            <n-text depth=\"3\" class=\"hidden sm:block\">{{ currentAvaliableAskCountsTip }}</n-text>\r\n          </div>\r\n        </div>\r\n      </n-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useUserStore, useConversationV3Store } from \"@/store\";\r\nimport { ConversationSchema } from \"@/types/schema\";\r\nimport { computed, h, onMounted, ref, watch } from \"vue\";\r\nimport { Dialog, LoadingBar, Message } from \"@/utils/tips\";\r\n\r\nimport StatusCard from \"./components/StatusCard.vue\";\r\n\r\nimport { ChatV3Message } from \"@/types/customv3\";\r\nimport { AskInfo, getAskWebsocketV3ApiUrl, addChat } from \"@/api/chatv3\";\r\n\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { NButton, NEllipsis, NIcon, useThemeVars } from \"naive-ui\";\r\nimport { Add, ChatboxEllipses, Send, ArrowDown } from \"@vicons/ionicons5\";\r\nimport {\r\n  KeyboardDoubleArrowDownRound,\r\n  KeyboardDoubleArrowUpRound,\r\n} from \"@vicons/material\";\r\nimport {\r\n  getCountTrans,\r\n  getModelNameTrans,\r\n  popupChangeConversationTitleDialog,\r\n} from \"@/utils/renders\";\r\nimport {\r\n  dropdownRendererV3,\r\n  popupNewConversationV3Dialog,\r\n} from \"@/utils/rendersv3\";\r\nimport { saveAs } from \"file-saver\";\r\nimport HistoryContent from \"@/views/conversationv3/components/HistoryContent.vue\";\r\n\r\nimport { getConvV3MessageListFromId } from \"@/utils/conversation\";\r\nconst themeVars = useThemeVars();\r\n\r\nconst { t } = useI18n();\r\n\r\nconst rootRef = ref();\r\nconst menuRef = ref(null);\r\nconst historyRef = ref();\r\nconst userStore = useUserStore();\r\nconst conversationV3Store = useConversationV3Store();\r\n\r\nconst inputExpanded = ref<boolean>(false);\r\nconst inputHeight = computed(() => (inputExpanded.value ? \"50vh\" : \"24vh\"));\r\nconst toggleInputExpanded = () => {\r\n  inputExpanded.value = !inputExpanded.value;\r\n};\r\n\r\nconst loadingBar = ref(false);\r\nconst loadingHistory = ref<boolean>(false);\r\n\r\nconst currentAvaliableAskCountsTip = computed(() => {\r\n  let result = \"\";\r\n  if (userStore.user?.available_ask_count != -1)\r\n    result += `${t(\"commons.availableAskCount\")}: ${getCountTrans(\r\n      userStore.user?.available_ask_count!\r\n    )}   `;\r\n  if (\r\n    currentConversation.value &&\r\n    currentConversation.value.model_name === \"gpt-4\" &&\r\n    userStore.user?.available_gpt4_ask_count != -1\r\n  )\r\n    result += `${t(\"commons.availableGPT4AskCount\")}: ${getCountTrans(\r\n      userStore.user?.available_gpt4_ask_count!\r\n    )}`;\r\n  return result;\r\n});\r\n\r\nconst newConversation = ref<ConversationSchema | null>(null);\r\nconst currentChatId = ref<string | null>(null);\r\nconst currentConversation = computed<ConversationSchema>(() => {\r\n  if (newConversation.value?.chat_id === currentChatId.value)\r\n    return newConversation.value;\r\n  const conv = conversationV3Store.conversationsv3?.find(\r\n    (conversation: ConversationSchema) => {\r\n      return conversation.chat_id == currentChatId.value;\r\n    }\r\n  );\r\n  return conv;\r\n});\r\n\r\nconst inputValue = ref(\"\");\r\nconst currentActiveMessageSend = ref<ChatV3Message | null>(null);\r\nconst currentActiveMessageRecv = ref<ChatV3Message | null>(null);\r\nconst currentMessageListDisplay = computed(() => {\r\n  const chat_id = currentConversation.value?.chat_id;\r\n  if (!chat_id) return [];\r\n  let result = getConvV3MessageListFromId(chat_id);\r\n  if (currentActiveMessages.value.length > 0) {\r\n    result = result.concat(currentActiveMessages.value);\r\n  }\r\n  return result;\r\n});\r\n\r\n// 从 store 中获取对话列表\r\nconst menuOptions = computed(() => {\r\n  // 获取对话并对对话增加方法\r\n  const results = conversationV3Store.conversationsv3?.map(\r\n    (conversation: ConversationSchema) => {\r\n      return {\r\n        label: () => h(NEllipsis, null, { default: () => conversation.title }),\r\n        key: conversation.chat_id,\r\n        disabled: loadingBar.value == true,\r\n        extra: () =>\r\n          dropdownRendererV3(\r\n            conversation,\r\n            handleDeleteConversation,\r\n            handleChangeConversationTitle,\r\n            exportToMarkdownFile\r\n          ),\r\n      };\r\n    }\r\n  );\r\n  return results;\r\n});\r\n// 删除对话\r\nconst handleDeleteConversation = (chat_id: string | undefined) => {\r\n  if (!chat_id) return;\r\n  const d = Dialog.info({\r\n    title: t(\"commons.confirmDialogTitle\"),\r\n    content: t(\"tips.deleteConversation\"),\r\n    positiveText: t(\"commons.confirm\"),\r\n    negativeText: t(\"commons.cancel\"),\r\n    onPositiveClick: () => {\r\n      d.loading = true;\r\n      return new Promise((resolve) => {\r\n        conversationV3Store\r\n          .deleteConversationV3(chat_id)\r\n          .then(() => {\r\n            Message.success(t(\"tips.deleteConversationSuccess\"));\r\n            if (currentChatId.value == chat_id) currentChatId.value = null;\r\n          })\r\n          .catch(() => {\r\n            Message.error(t(\"tips.deleteConversationFailed\"));\r\n          })\r\n          .finally(() => {\r\n            d.loading = false;\r\n            resolve(true);\r\n          });\r\n      });\r\n    },\r\n  });\r\n};\r\n// 修改对话的标题\r\nconst handleChangeConversationTitle = (chat_id: string | undefined) => {\r\n  if (!chat_id) return;\r\n  popupChangeConversationTitleDialog(\r\n    chat_id,\r\n    async (title: string) => {\r\n      await conversationV3Store.changeConversationV3Title(chat_id, title);\r\n    },\r\n    () => {\r\n      Message.success(t(\"tips.changeConversationTitleSuccess\"));\r\n    },\r\n    () => {\r\n      Message.error(t(\"tips.changeConversationTitleFailed\"));\r\n    }\r\n  );\r\n};\r\n\r\n// 从 store 中获取当前对话最新消息的 id\r\nconst currentNode = computed<string | undefined>(() => {\r\n  if (currentConversation.value?.chat_id)\r\n    return conversationV3Store.conversationV3DetailMap[\r\n      currentConversation.value?.chat_id\r\n    ]?.current_node;\r\n  else return undefined;\r\n});\r\n\r\n// 实际的 currentMessageList，加上当前正在发送的消息\r\nconst currentActiveMessages = computed<Array<ChatV3Message>>(() => {\r\n  const result: ChatV3Message[] = [];\r\n  if (\r\n    currentActiveMessageSend.value &&\r\n    result.findIndex(\r\n      (message) => message.id === currentActiveMessageSend.value?.id\r\n    ) === -1\r\n  )\r\n    result.push(currentActiveMessageSend.value);\r\n  if (\r\n    currentActiveMessageRecv.value &&\r\n    result.findIndex(\r\n      (message) => message.id === currentActiveMessageRecv.value?.id\r\n    ) === -1\r\n  )\r\n    result.push(currentActiveMessageRecv.value);\r\n  return result;\r\n});\r\n\r\nwatch(currentChatId, (newVal, oldVal) => {\r\n  // 切换对话，获取历史记录\r\n  handleChangeConversation(newVal);\r\n});\r\n\r\nconst handleChangeConversation = (key: string | null) => {\r\n  // 清除当前已询问、得到回复，但是发生错误的两条消息\r\n  if (loadingBar.value || !key) return;\r\n  loadingBar.value = true;\r\n  loadingHistory.value = true;\r\n  LoadingBar.start();\r\n  conversationV3Store.fetchConversationV3History(key).finally(() => {\r\n    loadingBar.value = false;\r\n    loadingHistory.value = false;\r\n    LoadingBar.finish();\r\n  });\r\n};\r\n\r\nconst sendDisabled = computed(() => {\r\n  return (\r\n    loadingBar.value ||\r\n    currentChatId.value == null ||\r\n    inputValue.value === null ||\r\n    inputValue.value.trim() == \"\"\r\n  );\r\n});\r\n// 创建新的对话\r\nconst makeNewConversation = () => {\r\n  if (newConversation.value) return;\r\n  popupNewConversationV3Dialog(async (title: string, model_name: any) => {\r\n    // console.log(title, model_name);\r\n    const params = {\r\n      title,\r\n      model_name,\r\n    };\r\n    // currentChatId.value = \"new_conversation\";\r\n    addChat(userStore.$state.user?.id as number, params).then((res: any) => {\r\n      console.log(\"res\", res);\r\n      const data = res.data;\r\n      currentChatId.value = data.chat_id;\r\n      newConversation.value = {\r\n        chat_id: data.chat_id,\r\n        // 默认标题格式：MMDD - username\r\n        title:\r\n          title ||\r\n          `New Chat ${new Date().toLocaleString()} - ${\r\n            userStore.user?.username\r\n          }`,\r\n        model_name: model_name || \"text-davinci-002-render-sha\",\r\n        create_time: new Date().toISOString(), // 仅用于当前排序到顶部\r\n      };\r\n      getAllConversationv3();\r\n    });\r\n  });\r\n};\r\n\r\nconst shortcutSendMsg = (e: KeyboardEvent) => {\r\n  e.preventDefault();\r\n  sendMsg();\r\n};\r\n\r\nconst autoScrolling = ref<boolean>(true);\r\n\r\nconst scrollToBottom = () => {\r\n  historyRef.value.scrollTo({\r\n    left: 0,\r\n    top: historyRef.value.$refs.scrollbarInstRef.contentRef.scrollHeight,\r\n  });\r\n};\r\n\r\nconst scrollToBottomSmooth = () => {\r\n  historyRef.value.scrollTo({\r\n    left: 0,\r\n    top: historyRef.value.$refs.scrollbarInstRef.contentRef.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n// 发送信息\r\nconst sendMsg = async () => {\r\n  if (sendDisabled.value || loadingBar.value) {\r\n    return;\r\n  }\r\n\r\n  LoadingBar.start();\r\n  loadingBar.value = true;\r\n  const message = inputValue.value;\r\n  inputValue.value = \"\";\r\n\r\n  const askInfo: AskInfo = { message };\r\n  askInfo.chat_id = currentConversation.value.chat_id;\r\n\r\n  // 使用临时的随机 id 保持当前更新的两个消息\r\n  const random_strid = Math.random().toString(36).substring(2, 16);\r\n  currentActiveMessageSend.value = {\r\n    id: `send_${random_strid}`,\r\n    message,\r\n    author_role: \"user\",\r\n  };\r\n  currentActiveMessageRecv.value = {\r\n    id: `recv_${random_strid}`,\r\n    message: \"\",\r\n    author_role: \"assistent\",\r\n    typing: true,\r\n  };\r\n  const wsUrl = getAskWebsocketV3ApiUrl();\r\n  let wsErrorMessage: string | null = null;\r\n  // console.log(\"Connecting to\", wsUrl, askInfo);\r\n  const webSocket = new WebSocket(wsUrl);\r\n\r\n  webSocket.onopen = (event: Event) => {\r\n    // console.log('WebSocket connection is open', askInfo);\r\n    webSocket.send(JSON.stringify(askInfo));\r\n  };\r\n\r\n  webSocket.onmessage = (event: MessageEvent) => {\r\n    const reply = JSON.parse(event.data);\r\n    if (!reply.type) return;\r\n    if (reply.type === \"waiting\") {\r\n      currentActiveMessageRecv.value!.message = t(reply.tip);\r\n      if (reply.waiting_count) {\r\n        currentActiveMessageRecv.value!.message += `(${reply.waiting_count})`;\r\n      }\r\n    } else if (reply.type === \"message\") {\r\n      // console.log(reply)\r\n      currentActiveMessageRecv.value!.message = reply.message;\r\n      currentActiveMessageRecv.value!.id = reply.chat_id;\r\n      if (newConversation.value) {\r\n        newConversation.value.chat_id = reply.chat_id;\r\n        if (currentChatId.value !== newConversation.value.chat_id) {\r\n          currentChatId.value = newConversation.value.chat_id!;\r\n        }\r\n      }\r\n    } else if (reply.type === \"error\") {\r\n      currentActiveMessageRecv.value!.message = `${t(reply.tip)}: ${\r\n        reply.message\r\n      }}`;\r\n      if (reply.message) {\r\n        wsErrorMessage = reply.message;\r\n      }\r\n    }\r\n    if (autoScrolling.value) scrollToBottom();\r\n  };\r\n\r\n  webSocket.onclose = async (event: CloseEvent) => {\r\n    currentActiveMessageRecv.value!.typing = false;\r\n    // console.log(\"WebSocket connection is closed\", event);\r\n    if (event.code === 1000) {\r\n      // 正常关闭\r\n      // 对于新对话，重新请求对话列表\r\n      await conversationV3Store.fetchAllConversationsv3(\r\n        userStore.$state.user?.id\r\n      );\r\n      const conv_detail =\r\n        conversationV3Store.conversationV3DetailMap[currentChatId.value!];\r\n      conv_detail.messageList?.push({\r\n        id: random_strid,\r\n        message: currentActiveMessageSend.value?.message,\r\n        author_role: \"user\",\r\n      });\r\n      conv_detail.messageList?.push({\r\n        id: random_strid,\r\n        message: currentActiveMessageRecv.value?.message,\r\n      });\r\n      currentActiveMessageSend.value = null;\r\n      currentActiveMessageRecv.value = null;\r\n    } else {\r\n      Dialog.error({\r\n        title: t(\"errors.askError\"),\r\n        content:\r\n          wsErrorMessage != null\r\n            ? `[${event.code}] ${t(event.reason)}: ${wsErrorMessage}`\r\n            : `[${event.code}] ${t(event.reason)}`,\r\n        positiveText: t(\"commons.withdrawMessage\"),\r\n        onPositiveClick: () => {\r\n          currentActiveMessageSend.value = null;\r\n          currentActiveMessageRecv.value = null;\r\n        },\r\n      });\r\n    }\r\n    await userStore.fetchUserInfo();\r\n    LoadingBar.finish();\r\n    loadingBar.value = false;\r\n  };\r\n\r\n  webSocket.onerror = (event: Event) => {\r\n    console.error(\"WebSocket error:\", event);\r\n  };\r\n};\r\n\r\nconst exportToMarkdownFile = () => {\r\n  if (!currentConversation.value) {\r\n    Message.error(t(\"tips.pleaseSelectConversation\"));\r\n    return;\r\n  }\r\n  let content = `# ${currentConversation.value!.title}\\n\\n`;\r\n  const create_time = new Date(\r\n    currentConversation.value!.create_time! + \"Z\"\r\n  ).toLocaleString();\r\n  content += `Date: ${create_time}\\nModel: ${getModelNameTrans(\r\n    currentConversation.value!.model_name as any\r\n  )}\\n`;\r\n  content +=\r\n    \"generated by [ChatGPT Web Share](https://github.com/moeakwak/chatgpt-web-share)\\n\\n\";\r\n  content += \"---\\n\\n\";\r\n  let index = 0;\r\n  for (const message of currentMessageListDisplay.value) {\r\n    if (message.author_role === \"user\") {\r\n      // 选取第一行作为标题，最多50个字符，如果有省略则加上...\r\n      let title = message.message!.trim().split(\"\\n\")[0];\r\n      if (title.length >= 50) {\r\n        title = title.slice(0, 47) + \"...\";\r\n      }\r\n      content += `## ${++index}. ${title}\\n\\n`;\r\n      content += `### User\\n\\n${message.message}\\n\\n`;\r\n    } else {\r\n      content += `### ChatGPT\\n\\n${message.message}\\n\\n`;\r\n      content += \"---\\n\\n\";\r\n    }\r\n  }\r\n  const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\r\n  saveAs(blob, `${currentConversation.value!.title} - ChatGPT history.md`);\r\n};\r\n\r\nconst historyContentRef = ref();\r\nconst showFullscreenTips = ref(false);\r\n\r\n// 加载对话列表\r\nconst getAllConversationv3 = () => {\r\n  conversationV3Store.fetchAllConversationsv3();\r\n};\r\nonMounted(() => {\r\n  getAllConversationv3();\r\n});\r\n</script>\r\n\r\n<style>\r\ntextarea.n-input__textarea-el {\r\n  resize: none;\r\n}\r\n\r\ndiv.n-menu-item-content-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\nspan.n-menu-item-content-header__extra {\r\n  display: inline-block;\r\n}\r\n\r\n.n-divider {\r\n  margin-bottom: 0px !important;\r\n  margin-top: 0px !important;\r\n}\r\n\r\n.left-col .n-card__content {\r\n  @apply flex flex-col @apply overflow-auto !important;\r\n}\r\n\r\n@media print {\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n\r\n  #print-content * {\r\n    visibility: visible;\r\n  }\r\n\r\n  /* no margin in page */\r\n  @page {\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n}\r\n</style>"],"names":["useI18n","serverStatus","ref","isExpaned","handleExpand","names","updateData","getServerStatusApi","res","t","i18n","dropdownRendererV3","conversation","handleDeleteConversation","handleChangeConversationTitle","handleExportToMarkdownFile","h","NDropdown","NButton","NIcon","MdMore","getAvailableModelOptions","type","userStore","useUserStore","options","_a","_b","popupNewConversationV3Dialog","callback","convTitle","convModel","d","Dialog","NInput","e","NSelect","value","resolve","md","mdLoaded","onMounted","module","themeVars","useThemeVars","observer","contentRef","showRawContent","toggleShowRawContent","backgroundColor","computed","props","renderedContent","result","addButtonsToPreTags","htmlString","doc","preTags","i","preTag","button","mutations","observer2","mutation","bindOnclick","preElements","preElement","alert","copyMessageContent","Message","historyContentParent","_fullscreen","modelName","getModelNameFromMessages","watch","toggleFullscreenHistory","showTips","appElement","bodyElement","historyContentElement","expose","rootRef","menuRef","historyRef","conversationV3Store","useConversationV3Store","inputExpanded","inputHeight","toggleInputExpanded","loadingBar","loadingHistory","currentAvaliableAskCountsTip","getCountTrans","currentConversation","_c","_d","newConversation","currentChatId","inputValue","currentActiveMessageSend","currentActiveMessageRecv","currentMessageListDisplay","chat_id","getConvV3MessageListFromId","currentActiveMessages","menuOptions","NEllipsis","exportToMarkdownFile","popupChangeConversationTitleDialog","title","message","newVal","oldVal","handleChangeConversation","key","LoadingBar","sendDisabled","makeNewConversation","model_name","params","addChat","data","getAllConversationv3","shortcutSendMsg","sendMsg","autoScrolling","scrollToBottom","scrollToBottomSmooth","askInfo","random_strid","wsUrl","getAskWebsocketV3ApiUrl","wsErrorMessage","webSocket","event","reply","conv_detail","_e","content","create_time","getModelNameTrans","index","blob","saveAs","historyContentRef","showFullscreenTips"],"mappings":"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"}